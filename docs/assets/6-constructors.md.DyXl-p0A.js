import{_ as a,c as s,o as t,a4 as n}from"./chunks/framework.wlZR029k.js";const m=JSON.parse('{"title":"6. Constructors","description":"","frontmatter":{},"headers":[],"relativePath":"6-constructors.md","filePath":"6-constructors.md"}'),r={name:"6-constructors.md"};function c(o,e,i,u,l,d){return t(),s("div",null,e[0]||(e[0]=[n('<h1 id="_6-constructors" tabindex="-1">6. Constructors <a class="header-anchor" href="#_6-constructors" aria-label="Permalink to &quot;6. Constructors&quot;">​</a></h1><p>Pot resultar una tasca bastant pesada inicialitzar totes les variables d&#39;una classe cada vegada que es crea una instància. Fins i tot quan s&#39;afigen funcions adequades, és més senzill i requerisc realitzar totes les inicialitzacions quan l&#39;objecte es crea per primera vegada. Com el procés d&#39;inicialització és tan comú, Java permet que els objectes s&#39;inicialitzen quan es creen. Aquesta inicialització automàtica es duu a terme mitjançant un constructor.</p><div class="important custom-block github-alert"><p class="custom-block-title"><strong>IMPORTANT!</strong></p><p></p><p>Un <strong>constructor</strong> és un mètode especial que <strong>no retorna mai un valor, sempre retorna una referència</strong> a una instància de la classe i és anomenat automàticament en crear un objecte d&#39;una classe, és a dir en usar la instrucció <code>new</code>.</p></div><p>Un constructor no és més que un mètode que té el <strong>mateix nom que la classe</strong>. En general, quan es crea una instància d&#39;una classe, no sempre es desitja passar els paràmetres d&#39;inicialització en construir-la, per això existeix un tipus especial de constructors, que són els anomenats constructors per defecte.</p><p>Aquests constructors no porten paràmetres associats, i inicialitzen les dades assignant-los valors per defecte.</p><p>Quan no es diu a un constructor de forma explícita, Java crea un constructor per defecte i el crida quan es crea un objecte. Aquest constructor per defecte assigna a les variables d&#39;instància un valor inicial igual a zero a les variables numèriques i null a totes les referències a objectes.</p><p>Una vegada es definisca un constructor per a la classe es deixa d&#39;utilitzar el constructor per defecte.</p><div class="warning custom-block"><p class="custom-block-title"><strong>ATENCIÓ</strong></p><p>Existeix la referència <code>this</code>, que apunta a la instància que anomena al mètode, i sempre està accessible, és utilitzat per les funcions membre per a accedir a les dades de l&#39;objecte.</p></div>',8)]))}const _=a(r,[["render",c]]);export{m as __pageData,_ as default};
