import{_ as o,C as l,c,o as d,a4 as u,G as i,j as e,w as t,a as s}from"./chunks/framework.wlZR029k.js";const x=JSON.parse(`{"title":"4. Tipus d'accés als membres d'una classe (visibilitat)","description":"","frontmatter":{},"headers":[],"relativePath":"4-visibilitat.md","filePath":"4-visibilitat.md"}`),m={name:"4-visibilitat.md"};function p(b,a,g,v,f,q){const n=l("PluginTabsTab"),r=l("PluginTabs");return d(),c("div",null,[a[1]||(a[1]=u('<h1 id="_4-tipus-d-acces-als-membres-d-una-classe-visibilitat" tabindex="-1">4. Tipus d&#39;accés als membres d&#39;una classe (visibilitat) <a class="header-anchor" href="#_4-tipus-d-acces-als-membres-d-una-classe-visibilitat" aria-label="Permalink to &quot;4. Tipus d&#39;accés als membres d&#39;una classe (visibilitat)&quot;">​</a></h1><p>Els membres d&#39;una classe (atributs i mètodes, és a dir, les seues variables i funcions) poden tindre diferents nivells d&#39;accés, segons el llenguatge de programació. Habitualment, es distingeix entre:</p><ul><li><strong>Public</strong>: Pot accedir-s&#39;hi des de qualsevol altre codi (classe, mòdul o fitxer) que importe o visibilitze la classe.</li><li><strong>Privat</strong>: Només pot accedir-s&#39;hi des del mateix cos de la classe; ningú fora d&#39;ella no pot llegir ni modificar aqueixos membres.</li><li><strong>Protegit</strong>: Pot accedir-s&#39;hi la pròpia classe i també les subclasses (o classes derivades) que hereten d&#39;ella.</li><li><strong>Paquet</strong>: Els membres marcats amb aquest nivell només són accessibles per codi dins del mateix paquet, mòdul o directori (depèn de com organitze el llenguatge els espais de noms).</li></ul><p>La sintaxi concreta per a cada nivell d&#39;accés és la següent:</p>',4)),i(r,null,{default:t(()=>[i(n,{label:"Java"},{default:t(()=>a[0]||(a[0]=[e("ul",null,[e("li",null,[e("code",null,"public")]),e("li",null,[e("code",null,"protected")]),e("li",null,[e("code",null,"private")]),e("li",null,"(paquet sense qualificació)")],-1)])),_:1,__:[0]})]),_:1}),a[2]||(a[2]=e("p",null,[s("La idea és restringir l'accés a les dades internes d'una classe per tal de mantenir la seua "),e("strong",null,"encapsulació"),s(". D'aquesta manera, es defineix una "),e("strong",null,"interfície pública"),s(" (els membres marcats com a public) que permet a altres components interactuar amb la classe sense conéixer-ne els detalls interns, i es mantenen com a private tots els atributs i mètodes que no han de ser exposats directament.")],-1)),a[3]||(a[3]=e("p",null,"Per a mantenir l'encapsulació, és recomanable:",-1)),a[4]||(a[4]=e("ul",null,[e("li",null,"Marcar com a publics únicament aquells mètodes i atributs que formen part de l'interfície que vols exposar."),e("li",null,"Marcar com a privades (o equivalent) totes les dades internes i mètodes auxiliars que no han de ser accedits directament per codi extern."),e("li",null,"Marcar com a protegit només quan cal que una classe derivada puga accedir a algunes dades o funcionalitats concretes de la classe base, sense fer-les públiques a tot arreu.")],-1)),a[5]||(a[5]=e("p",null,"D'aquesta manera, el codi extern només podrà interactuar amb la classe a través de la seua interfície pública, i es minimitza el risc d'alterar l'estat intern dels objectes per error.",-1))])}const P=o(m,[["render",p]]);export{x as __pageData,P as default};
