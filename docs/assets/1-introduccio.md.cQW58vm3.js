import{_ as a,c as s,o as i,a4 as t}from"./chunks/framework.wlZR029k.js";const m=JSON.parse('{"title":"1. Introducció","description":"","frontmatter":{},"headers":[],"relativePath":"1-introduccio.md","filePath":"1-introduccio.md"}'),r={name:"1-introduccio.md"};function n(o,e,l,c,d,u){return i(),s("div",null,e[0]||(e[0]=[t('<h1 id="_1-introduccio" tabindex="-1">1. Introducció <a class="header-anchor" href="#_1-introduccio" aria-label="Permalink to &quot;1. Introducció&quot;">​</a></h1><p>La Programació Orientada a Objectes (POO) fa que els problemes siguen més senzills, en permetre dividir el problema. Aquesta divisió es fa en objectes, de manera que cada objecte funcione de forma totalment independent.</p><div class="important custom-block github-alert"><p class="custom-block-title"><strong>IMPORTANT!</strong></p><p></p><ul><li><p>Un <strong>objecte</strong> és un element del programa que posseeix les seues pròpies dades i el seu propi funcionament.</p></li><li><p>Una <strong>classe</strong> descriu un grup d&#39;objectes que contenen una informació similar (atributs) i un comportament comú (mètodes).</p></li></ul></div><div class="warning custom-block github-alert"><p class="custom-block-title"><strong>ATENCIÓ!</strong></p><p></p><p>Abans de poder utilitzar un objecte, s&#39;ha de definir la seua classe. La classe és la definició d&#39;una mena d&#39;objecte.</p></div><p>En definir una classe el que es fa és indicar com funciona un determinat tipus d&#39;objectes. Després, a partir de la classe, podrem crear objectes d&#39;aqueixa classe.</p><p>Les propietats de la POO són la següents:</p><ul><li><strong>Encapsulament</strong>. Una classe es compon tant de variables (atributs) com de funcions i procediments (mètodes). De fet no es poden definir variables (ni funcions) fora d&#39;una classe (és a dir no hi ha variables globals).</li><li><strong>Abstracció</strong>. Cal crear versions simplificades dels objectes i classes del mon real. També s&#39;estableixen zones ocultes en definir la classes (zona privada) que només són utilitzades per aquesta classe i per alguna classe relacionada. Hi ha zones pública (anomenada també interfície de la classe) que poden ser utilitzades per qualsevol part del codi.</li><li><strong>Polimorfisme</strong>. Cada mètode d&#39;una classe pot tindre diverses definicions diferents. En el cas del joc parxís: partida.començar(4) comença una partida per a quatre jugadors, partida.començar(roig, blau) comença una partida de dos jugadors per als colors roig i blau; aquestes són dues formes diferents d&#39;emprar el mètode començar, que és polimòrfic.</li><li><strong>Herència</strong>. Una classe es pot definir a partir d&#39;una altra ja existent. D&#39;aquesta forma, la nova classe pot heretar propietats (atributs i mètodes) de l&#39;altra.</li></ul>',7)]))}const f=a(r,[["render",n]]);export{m as __pageData,f as default};
