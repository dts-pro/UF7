import{_ as a,c as t,o as s,a4 as n}from"./chunks/framework.wlZR029k.js";const m=JSON.parse('{"title":"7. Constants de classe i objecte","description":"","frontmatter":{},"headers":[],"relativePath":"7-constants.md","filePath":"7-constants.md"}'),i={name:"7-constants.md"};function r(c,e,o,l,d,u){return s(),t("div",null,e[0]||(e[0]=[n('<h1 id="_7-constants-de-classe-i-objecte" tabindex="-1">7. Constants de classe i objecte <a class="header-anchor" href="#_7-constants-de-classe-i-objecte" aria-label="Permalink to &quot;7. Constants de classe i objecte&quot;">​</a></h1><p>Els membres constants es defineixen a Java a través de la paraula reservada final, mentre que els membres de classe es defineixen mitjançant la paraula reservada static. D&#39;aquesta manera, si considerem que els membres són atributs, tenim quatre possibles combinacions a Java per a indicar si un atribut és constant:</p><ul><li>Atributs <code>static</code>: prenen valors comuns a tots els objectes existents i potencialment variables. Poden utilitzar-se encara que no existisca cap objecte instanciat.</li><li>Atributs <code>final</code>: són valors constants, però potencialment diferents en cadascuna de les instàncies. El seu valor s&#39;inicialitza en la fase de construcció de l&#39;objecte i no poden ser modificats durant el temps de vida d&#39;aquest.</li><li>Atributs <code>static final</code>: combinen les característiques de static i final.</li><li>Resta d&#39;atributs (sense static ni final): atributs variables i diferents per a cada object.</li></ul><div class="warning custom-block github-alert"><p class="custom-block-title"><strong>ATENCIÓ</strong></p><p></p><p>Els <strong>atributs static</strong> de la classe han de ser limitats, ja que poden donar lloc a errors de molt difícil depuració, a més d&#39;anar contra el concepte de la programació orientada a objectes.</p></div><p>Les constants d&#39;objecte es defineixen mitjançant la paraula reservada final. Es tracta d&#39;atributs que prenen el valor en el constructor de l&#39;objecte, un valor que no pot ser modificat en la resta del programa. D&#39;aquesta manera, a cada objecte correspon un atribut d&#39;aqueix tipus, però invariable per a ell. Aquest tipus d&#39;atributs serveix per a identificar cada objecte de manera única (veure exemple 5).</p>',5)]))}const b=a(i,[["render",r]]);export{m as __pageData,b as default};
